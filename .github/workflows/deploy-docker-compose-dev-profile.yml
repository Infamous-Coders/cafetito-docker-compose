name: Deploy Docker Compose Dev Profile

on:
  push:
    branches:
      - develop
    paths:
      - 'dev/docker-compose.yml'
      - .github/workflows/deploy-docker-compose-dev-profile.yml

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Instalar Cloudflared
        run: |
          curl -L https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64 -o cloudflared
          chmod +x cloudflared
          sudo mv cloudflared /usr/local/bin/cloudflared
      - name: Configurar clave SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
      - name: Crear archivo SSH config con Cloudflared
        run: |
          cat <<EOF > ~/.ssh/config
          Host sshserver
            HostName ${{ secrets.DOMAIN }}
            User ${{ secrets.USERNAME }}
            IdentityFile ~/.ssh/id_rsa
            StrictHostKeyChecking no
            ProxyCommand cloudflared access ssh --hostname %h
          EOF
          chmod 600 ~/.ssh/config
      - name: Ejecutar comandos en el servidor remoto
        run: |
          ssh sshserver << 'EOF'
          
          set -e
          
          echo "üì¶ Cambiando al repositorio..."
          cd /mnt/nvme01/cafetito/repositories
          
          if [ ! -d "cafetito-docker-compose" ]; then
          
            git clone git@github.com:Infamous-Coders/cafetito-docker-compose.git
            echo "‚úÖ Repositorio clonado."
            cd cafetito-docker-compose
          
          else
          
            echo "‚úÖ El repositorio ya existe."
            cd cafetito-docker-compose
          
            echo "üóÇÔ∏è Haciendo backup temporal..."  
            cp -r dev dev_backup_$(date +%s)
          fi
          
          PREVIOUS_COMMIT=$(git rev-parse origin/develop)
          echo "üîΩ Actualizando a la √∫ltima versi√≥n el repositorio..."
          
          if git branch | grep "develop"; then
            git switch develop
          else
            git checkout -b develop origin/develop
          fi
          
          git pull origin develop || {
            echo "‚ùå Error al actualizar el repositorio. Abortando."
            exit 1
          }
          
          
          cd dev
          
          if [ ! -f ".env" ]; then
            touch .env
            echo "ENCRYPT_KEY=$ENCRYPT_KEY" >> .env
            echo "JWT_SECRET=$JWT_SECRET" >> .env
            echo "SERVER_GIT_URI=$SERVER_GIT_URI" >> .env
            echo "CORS_ALLOWED_ORIGINS=$CORS_ALLOWED_ORIGINS" >> .env
          fi
          
          echo "üßπ Bajando contenedores actuales..."
          sudo docker compose down
          
          echo "üöÄ Levantando nuevos contenedores..."
          if ! sudo docker compose up -d; then
            echo "‚ùå Docker Compose fall√≥. Haciendo rollback..."
          
          # Rollback del c√≥digo
          cd ../
          git reset --hard "$PREVIOUS_COMMIT"
          cp -r dev_backup_* dev
          rm -rf dev_backup_*
          
          # Rollback de contenedores
          cd dev
          sudo docker compose up -d || {
          echo "üî• Rollback tambi√©n fall√≥. Revisi√≥n manual requerida."
          exit 1
          }
          
          echo "‚úÖ Rollback exitoso."
          exit 1
          fi
          
          echo "üßπ Limpiando im√°genes antiguas..."
          sudo docker image prune -f
          cd ../
          rm -rf dev_backup_*
          
          echo "‚úÖ Deploy finalizado con √©xito."
          
          EOF